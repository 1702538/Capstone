{"ast":null,"code":"import _regeneratorRuntime from\"C:/SourceTree/capstone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/SourceTree/capstone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/SourceTree/capstone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Table}from\"antd\";import{useEffect,useState}from\"react/cjs/react.production.min\";import alerts from\"./Data/alert.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ThreatsTable(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),alertData=_useState2[0],setAlertData=_useState2[1];useEffect(function(){getData();},[]);var getData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetch(\"http://localhost:3001/alerts\").then(function(response){return response.json();}).then(function(data){return setAlertData(data);});console.log(alertData);case 2:case\"end\":return _context.stop();}}},_callee);}));return function getData(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:\"white\"},children:\"Detected Cyber Security Threats\"}),/*#__PURE__*/_jsx(Table,{dataSource:[],columns:columns,pagination:{defaultPageSize:5}})]});}var dataSource=[];var columns=[{title:\"Timestamp\",dataIndex:\"timestamp\",key:\"timestamp\",sorter:function sorter(a,b){return a.timestamp-b.timestamp;}},{title:\"Source\",dataIndex:\"source\",key:\"source\"},{title:\"Destination\",dataIndex:\"destination\",key:\"destination\"},{title:\"Threat Info\",dataIndex:\"threatinfo\",render:function render(text,record){return/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Threat Category: \"}),record.threat_category,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"Threat Name: \"}),record.threat_name,\" \",/*#__PURE__*/_jsx(\"br\",{})]});},key:\"threat\",filters:[{text:\"Policy Violation\",value:\"Policy Violation\"},{text:\"Suspicious\",value:\"Suspicious\"}],onFilter:function onFilter(value,record){return record.threat_category.includes(value);},filterMode:\"tree\",filterSearch:true}// {\n//   title: \"Threat Type\",\n//   dataIndex: \"threat\",\n//   key: \"threat\",\n//   filters: [\n//     {\n//       text: \"Trojan\",\n//       value: \"Trojan\",\n//     },\n//     {\n//       text: \"Rootkit\",\n//       value: \"Rootkit\",\n//     },\n//   ],\n//   onFilter: (value, record) => record.threat.includes(value),\n//   filterMode: \"tree\",\n//   filterSearch: true,\n// },\n];export default ThreatsTable;","map":{"version":3,"sources":["C:/SourceTree/capstone-project/src/Components/TableThreats.js"],"names":["Table","useEffect","useState","alerts","ThreatsTable","alertData","setAlertData","getData","fetch","then","response","json","data","console","log","color","columns","defaultPageSize","dataSource","title","dataIndex","key","sorter","a","b","timestamp","render","text","record","threat_category","threat_name","filters","value","onFilter","includes","filterMode","filterSearch"],"mappings":"4bAAA,OAASA,KAAT,KAAsB,MAAtB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,gCAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,QAASC,CAAAA,YAAT,EAAwB,CACtB,cAAkCF,QAAQ,CAAC,EAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eACAL,SAAS,CAAC,UAAM,CACdM,OAAO,GACR,CAFQ,CAEN,EAFM,CAAT,CAGA,GAAMA,CAAAA,OAAO,0FAAG,mIACdC,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,QAAUN,CAAAA,YAAY,CAACM,IAAD,CAAtB,EAFR,EAIAC,OAAO,CAACC,GAAR,CAAYT,SAAZ,EALc,sDAAH,kBAAPE,CAAAA,OAAO,0CAAb,CAQA,mBACE,oCACE,WAAI,KAAK,CAAE,CAAEQ,KAAK,CAAE,OAAT,CAAX,6CADF,cAEE,KAAC,KAAD,EACE,UAAU,CAAE,EADd,CAEE,OAAO,CAAEC,OAFX,CAGE,UAAU,CAAE,CACVC,eAAe,CAAE,CADP,CAHd,EAFF,GADF,CAYD,CAED,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CAEA,GAAMF,CAAAA,OAAO,CAAG,CACd,CACEG,KAAK,CAAE,WADT,CAEEC,SAAS,CAAE,WAFb,CAGEC,GAAG,CAAE,WAHP,CAIEC,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAA1B,EAJV,CADc,CAOd,CACEN,KAAK,CAAE,QADT,CAEEC,SAAS,CAAE,QAFb,CAGEC,GAAG,CAAE,QAHP,CAPc,CAYd,CACEF,KAAK,CAAE,aADT,CAEEC,SAAS,CAAE,aAFb,CAGEC,GAAG,CAAE,aAHP,CAZc,CAiBd,CACEF,KAAK,CAAE,aADT,CAEEC,SAAS,CAAE,YAFb,CAGEM,MAAM,CAAE,gBAACC,IAAD,CAAOC,MAAP,qBACN,qCACE,wCADF,CAEGA,MAAM,CAACC,eAFV,kBAE2B,aAF3B,cAGE,oCAHF,CAIGD,MAAM,CAACE,WAJV,kBAIuB,aAJvB,GADM,EAHV,CAWET,GAAG,CAAE,QAXP,CAYEU,OAAO,CAAE,CACP,CACEJ,IAAI,CAAE,kBADR,CAEEK,KAAK,CAAE,kBAFT,CADO,CAKP,CACEL,IAAI,CAAE,YADR,CAEEK,KAAK,CAAE,YAFT,CALO,CAZX,CAsBEC,QAAQ,CAAE,kBAACD,KAAD,CAAQJ,MAAR,QAAmBA,CAAAA,MAAM,CAACC,eAAP,CAAuBK,QAAvB,CAAgCF,KAAhC,CAAnB,EAtBZ,CAuBEG,UAAU,CAAE,MAvBd,CAwBEC,YAAY,CAAE,IAxBhB,CA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5Dc,CAAhB,CA+DA,cAAehC,CAAAA,YAAf","sourcesContent":["import { Table } from \"antd\";\r\nimport { useEffect, useState } from \"react/cjs/react.production.min\";\r\nimport alerts from \"./Data/alert.json\";\r\n\r\nfunction ThreatsTable() {\r\n  const [alertData, setAlertData] = useState([]);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const getData = async () => {\r\n    fetch(\"http://localhost:3001/alerts\")\r\n      .then((response) => response.json())\r\n      .then((data) => setAlertData(data));\r\n\r\n    console.log(alertData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ color: \"white\" }}>Detected Cyber Security Threats</h3>\r\n      <Table\r\n        dataSource={[]}\r\n        columns={columns}\r\n        pagination={{\r\n          defaultPageSize: 5,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst dataSource = [];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Timestamp\",\r\n    dataIndex: \"timestamp\",\r\n    key: \"timestamp\",\r\n    sorter: (a, b) => a.timestamp - b.timestamp,\r\n  },\r\n  {\r\n    title: \"Source\",\r\n    dataIndex: \"source\",\r\n    key: \"source\",\r\n  },\r\n  {\r\n    title: \"Destination\",\r\n    dataIndex: \"destination\",\r\n    key: \"destination\",\r\n  },\r\n  {\r\n    title: \"Threat Info\",\r\n    dataIndex: \"threatinfo\",\r\n    render: (text, record) => (\r\n      <span>\r\n        <b>Threat Category: </b>\r\n        {record.threat_category} <br />\r\n        <b>Threat Name: </b>\r\n        {record.threat_name} <br />\r\n      </span>\r\n    ),\r\n    key: \"threat\",\r\n    filters: [\r\n      {\r\n        text: \"Policy Violation\",\r\n        value: \"Policy Violation\",\r\n      },\r\n      {\r\n        text: \"Suspicious\",\r\n        value: \"Suspicious\",\r\n      },\r\n    ],\r\n    onFilter: (value, record) => record.threat_category.includes(value),\r\n    filterMode: \"tree\",\r\n    filterSearch: true,\r\n  },\r\n  // {\r\n  //   title: \"Threat Type\",\r\n  //   dataIndex: \"threat\",\r\n  //   key: \"threat\",\r\n  //   filters: [\r\n  //     {\r\n  //       text: \"Trojan\",\r\n  //       value: \"Trojan\",\r\n  //     },\r\n  //     {\r\n  //       text: \"Rootkit\",\r\n  //       value: \"Rootkit\",\r\n  //     },\r\n  //   ],\r\n  //   onFilter: (value, record) => record.threat.includes(value),\r\n  //   filterMode: \"tree\",\r\n  //   filterSearch: true,\r\n  // },\r\n];\r\n\r\nexport default ThreatsTable;\r\n"]},"metadata":{},"sourceType":"module"}