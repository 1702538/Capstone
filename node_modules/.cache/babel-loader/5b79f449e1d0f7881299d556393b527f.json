{"ast":null,"code":"import _toConsumableArray from\"C:/SourceTree/capstone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/SourceTree/capstone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,memo}from\"react\";import\"antd/dist/antd.css\";import\"./index.css\";import{Form,Layout,Table,Space,Popconfirm}from\"antd\";import ManageDrawer from\"./Components/DrawerManage\";import device_data from\"./Components/Data/device_data.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AppManageDevice(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),manageDrawerStatus=_useState2[0],setManageDrawerStatus=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),manageDeviceDetails=_useState4[0],setManageDeviceDetails=_useState4[1];var _useState5=useState(device_data),_useState6=_slicedToArray(_useState5,2),thisDeviceData=_useState6[0],updateDeviceTableData=_useState6[1];var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),deviceForm=_Form$useForm2[0];var columns=[{title:\"Action\",key:\"action\",width:150,render:function render(record){return/*#__PURE__*/_jsxs(Space,{size:\"middle\",children:[/*#__PURE__*/_jsx(\"a\",{onClick:function onClick(){return onEditClick(record);},children:\"Edit\"}),/*#__PURE__*/_jsx(Popconfirm,{title:\"Are you sure?\",okText:\"Yes\",cancelText:\"No\",placement:\"bottom\",onConfirm:function onConfirm(){return tester_delete(record);},children:/*#__PURE__*/_jsx(\"a\",{children:\"Remove\"})})]});}},{title:\"IP Address\",dataIndex:\"id\",key:\"id\",width:150},{title:\"Hostname\",dataIndex:\"name\",key:\"name\",width:150},{title:\"Device Type\",dataIndex:\"type\",key:\"type\",width:150},{title:\"OS Version\",dataIndex:\"os\",key:\"os\",width:150},{title:\"Mac Address\",dataIndex:\"mac_addr\",key:\"mac_addr\",width:150},{title:\"Ownership\",dataIndex:\"ownership\",key:\"ownership\",width:150}];// When user clicks on \"Edit\", two functions will run:\n// - openManageDrawerStatus - To open device drawer\n// - setManageDeviceDetails - Pass the record to FormDeviceMange page (for the Revert button)\n// - setFormValue - Directly update the values in the Form component\nvar onEditClick=function onEditClick(record){openManageDrawerStatus();setManageDeviceDetails(record);setFormValues(record);};var openManageDrawerStatus=function openManageDrawerStatus(){setManageDrawerStatus(true);};var closeMangeDeviceDrawer=function closeMangeDeviceDrawer(){setManageDrawerStatus(false);};var setFormValues=function setFormValues(record){deviceForm.setFieldsValue({hostname:record.name,device_type:record.type,os_version:record.os,mac_address:record.mac_addr,ownership:record.ownership});};// To update the values in the table based on the new\nvar updatedFormValues=function updatedFormValues(updated){// Sample console log for verification only\nconsole.log(\"Updated hostname to\",updated.hostname,\"where IP Address is\",manageDeviceDetails.id);updateTableValues(updated);};// Function to update the table with the updated values from the user\nfunction updateTableValues(updated){for(var i=0;i<thisDeviceData.length;i++){if(thisDeviceData[i].id===manageDeviceDetails.id){thisDeviceData[i].name=updated.hostname;thisDeviceData[i].type=updated.device_type;thisDeviceData[i].os=updated.os_version;thisDeviceData[i].mac_addr=updated.mac_address;thisDeviceData[i].ownership=updated.ownership;break;}}updateDeviceTableData(_toConsumableArray(thisDeviceData));console.log(\"Table Updated:\",thisDeviceData[i].name);console.log(thisDeviceData);}function tester_delete(recordToDelete){for(var i=0;i<thisDeviceData.length;i++){if(thisDeviceData[i].id===recordToDelete.id){thisDeviceData.splice(i,1);break;}}console.log(recordToDelete.id,\"has been deleted\");console.log(thisDeviceData);updateDeviceTableData(_toConsumableArray(thisDeviceData));}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ManageDrawer,{manageDrawerStatus:manageDrawerStatus,manageDeviceDetails:manageDeviceDetails,closeMangeDeviceDrawer:closeMangeDeviceDrawer,deviceForm:deviceForm,updatedFormValues:updatedFormValues}),/*#__PURE__*/_jsx(Layout,{style:{marginLeft:199},children:/*#__PURE__*/_jsx(Table,{dataSource:_toConsumableArray(thisDeviceData),columns:columns})})]});}export default AppManageDevice;","map":{"version":3,"sources":["C:/SourceTree/capstone-project/src/ManageDevices.js"],"names":["React","useState","memo","Form","Layout","Table","Space","Popconfirm","ManageDrawer","device_data","AppManageDevice","manageDrawerStatus","setManageDrawerStatus","manageDeviceDetails","setManageDeviceDetails","thisDeviceData","updateDeviceTableData","useForm","deviceForm","columns","title","key","width","render","record","onEditClick","tester_delete","dataIndex","openManageDrawerStatus","setFormValues","closeMangeDeviceDrawer","setFieldsValue","hostname","name","device_type","type","os_version","os","mac_address","mac_addr","ownership","updatedFormValues","updated","console","log","id","updateTableValues","i","length","recordToDelete","splice","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, memo } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Layout, Table, Space, Popconfirm } from \"antd\";\nimport ManageDrawer from \"./Components/DrawerManage\";\nimport device_data from \"./Components/Data/device_data.json\";\n\nfunction AppManageDevice() {\n  const [manageDrawerStatus, setManageDrawerStatus] = useState(false);\n  const [manageDeviceDetails, setManageDeviceDetails] = useState({});\n  const [thisDeviceData, updateDeviceTableData] = useState(device_data);\n\n  const [deviceForm] = Form.useForm();\n\n  const columns = [\n    {\n      title: \"Action\",\n      key: \"action\",\n      width: 150,\n      render: (record) => (\n        <Space size=\"middle\">\n          <a onClick={() => onEditClick(record)}>Edit</a>\n          <Popconfirm\n            title=\"Are you sure?\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n            placement=\"bottom\"\n            onConfirm={() => tester_delete(record)}\n          >\n            <a>Remove</a>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n    {\n      title: \"IP Address\",\n      dataIndex: \"id\",\n      key: \"id\",\n      width: 150,\n    },\n    {\n      title: \"Hostname\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: 150,\n    },\n    {\n      title: \"Device Type\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: 150,\n    },\n    {\n      title: \"OS Version\",\n      dataIndex: \"os\",\n      key: \"os\",\n      width: 150,\n    },\n    {\n      title: \"Mac Address\",\n      dataIndex: \"mac_addr\",\n      key: \"mac_addr\",\n      width: 150,\n    },\n    {\n      title: \"Ownership\",\n      dataIndex: \"ownership\",\n      key: \"ownership\",\n      width: 150,\n    },\n  ];\n\n  // When user clicks on \"Edit\", two functions will run:\n  // - openManageDrawerStatus - To open device drawer\n  // - setManageDeviceDetails - Pass the record to FormDeviceMange page (for the Revert button)\n  // - setFormValue - Directly update the values in the Form component\n  const onEditClick = (record) => {\n    openManageDrawerStatus();\n    setManageDeviceDetails(record);\n    setFormValues(record);\n  };\n\n  const openManageDrawerStatus = () => {\n    setManageDrawerStatus(true);\n  };\n\n  const closeMangeDeviceDrawer = () => {\n    setManageDrawerStatus(false);\n  };\n\n  const setFormValues = (record) => {\n    deviceForm.setFieldsValue({\n      hostname: record.name,\n      device_type: record.type,\n      os_version: record.os,\n      mac_address: record.mac_addr,\n      ownership: record.ownership,\n    });\n  };\n\n  // To update the values in the table based on the new\n  const updatedFormValues = (updated) => {\n    // Sample console log for verification only\n    console.log(\n      \"Updated hostname to\",\n      updated.hostname,\n      \"where IP Address is\",\n      manageDeviceDetails.id\n    );\n\n    updateTableValues(updated);\n  };\n\n  // Function to update the table with the updated values from the user\n  function updateTableValues(updated) {\n    for (var i = 0; i < thisDeviceData.length; i++) {\n      if (thisDeviceData[i].id === manageDeviceDetails.id) {\n        thisDeviceData[i].name = updated.hostname;\n        thisDeviceData[i].type = updated.device_type;\n        thisDeviceData[i].os = updated.os_version;\n        thisDeviceData[i].mac_addr = updated.mac_address;\n        thisDeviceData[i].ownership = updated.ownership;\n        break;\n      }\n    }\n    updateDeviceTableData([...thisDeviceData]);\n    console.log(\"Table Updated:\", thisDeviceData[i].name);\n    console.log(thisDeviceData);\n  }\n\n  function tester_delete(recordToDelete) {\n    for (var i = 0; i < thisDeviceData.length; i++) {\n      if (thisDeviceData[i].id === recordToDelete.id) {\n        thisDeviceData.splice(i, 1);\n        break;\n      }\n    }\n    console.log(recordToDelete.id, \"has been deleted\");\n    console.log(thisDeviceData);\n    updateDeviceTableData([...thisDeviceData]);\n  }\n\n  return (\n    <div>\n      <ManageDrawer\n        manageDrawerStatus={manageDrawerStatus}\n        manageDeviceDetails={manageDeviceDetails}\n        closeMangeDeviceDrawer={closeMangeDeviceDrawer}\n        deviceForm={deviceForm}\n        updatedFormValues={updatedFormValues}\n      />\n      <Layout style={{ marginLeft: 199 }}>\n        <Table dataSource={[...thisDeviceData]} columns={columns} />\n      </Layout>\n    </div>\n  );\n}\n\nexport default AppManageDevice;\n"]},"metadata":{},"sourceType":"module"}