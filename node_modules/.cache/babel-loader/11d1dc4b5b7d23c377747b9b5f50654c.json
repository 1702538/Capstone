{"ast":null,"code":"var _jsxFileName = \"C:\\\\SourceTree\\\\capstone-project\\\\src\\\\ManageDevices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Layout, Table, Space, Popconfirm } from \"antd\";\nimport ManageDrawer from \"./Components/DrawerManage\";\nimport device_data from \"./Components/Data/device_data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column\n} = Table;\n\nfunction AppManageDevice() {\n  _s();\n\n  const [manageDrawerStatus, setManageDrawerStatus] = useState(false);\n  const [manageDeviceDetails, setManageDeviceDetails] = useState({});\n  const [deviceTableData, updateDeviceTableData] = useState(device_data);\n  const [deviceForm] = Form.useForm(); // When user clicks on \"Edit\", two functions will run:\n  // - openManageDrawerStatus - To open device drawer\n  // - setManageDeviceDetails - Pass the record to FormDeviceMange page (for the Revert button)\n  // - setFormValue - Directly update the values in the Form component\n\n  async function onEditClick(record) {\n    openManageDrawerStatus();\n    setManageDeviceDetails(record);\n    setFormValues(record);\n  }\n\n  const openManageDrawerStatus = () => {\n    setManageDrawerStatus(true);\n  };\n\n  const closeMangeDeviceDrawer = () => {\n    setManageDrawerStatus(false);\n  };\n\n  const setFormValues = record => {\n    deviceForm.setFieldsValue({\n      hostname: record.name,\n      device_type: record.type,\n      os_version: record.os,\n      mac_address: record.mac_addr,\n      ownership: record.ownership\n    });\n  }; // To update the values in the table based on the new\n\n\n  const updatedFormValues = updated => {\n    // Sample console log for verification only\n    console.log(\"Updated hostname to\", updated.hostname, \"where IP Address is\", manageDeviceDetails.id);\n    updateTableValues(updated);\n  }; // Function to update the table with the updated values from the user\n\n\n  function updateTableValues(updated) {\n    for (var i = 0; i < device_data.length; i++) {\n      if (device_data[i].id == manageDeviceDetails.id) {\n        device_data[i].name = updated.hostname;\n        break;\n      }\n    }\n\n    console.log(\"Table Updated:\", device_data[i].name);\n  }\n\n  function tester_delete(recordToDelete) {\n    console.log(recordToDelete.id);\n\n    for (var i = 0; i < device_data.length; i++) {\n      if (device_data[i].id == recordToDelete.id) {\n        device_data.splice(i, 1);\n        console.log(device_data);\n      }\n    }\n  }\n\n  const tableComponent = /*#__PURE__*/React.memo(props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ManageDrawer, {\n        manageDrawerStatus: manageDrawerStatus,\n        manageDeviceDetails: manageDeviceDetails,\n        closeMangeDeviceDrawer: closeMangeDeviceDrawer,\n        deviceForm: deviceForm,\n        updatedFormValues: updatedFormValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        style: {\n          marginLeft: 198\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: [...device_data],\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"Action\",\n            render: record => /*#__PURE__*/_jsxDEV(Space, {\n              size: \"middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => onEditClick(record),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n                title: \"Are you sure?\",\n                okText: \"Yes\",\n                cancelText: \"No\",\n                placement: \"bottom\",\n                onConfirm: () => tester_delete(record),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, \"action\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"IP Address\",\n            dataIndex: \"id\"\n          }, \"id\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Hostname\",\n            dataIndex: \"name\"\n          }, \"name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Device Type\",\n            dataIndex: \"type\"\n          }, \"type\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"OS Version\",\n            dataIndex: \"os\"\n          }, \"os\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Mac Address\",\n            dataIndex: \"mac_addr\"\n          }, \"mac_addr\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Ownership\",\n            dataIndex: \"ownership\"\n          }, \"ownership\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"tableComponent\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppManageDevice, \"0M8fMm5q6OxbHHWIzgokqh+cW9I=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = AppManageDevice;\nexport default AppManageDevice; // return (\n//   <div>\n//     <ManageDrawer\n//       manageDrawerStatus={manageDrawerStatus}\n//       manageDeviceDetails={manageDeviceDetails}\n//       closeMangeDeviceDrawer={closeMangeDeviceDrawer}\n//       deviceForm={deviceForm}\n//       updatedFormValues={updatedFormValues}\n//     />\n//     <Layout style={{ marginLeft: 199 }}>\n//       <Table dataSource={[...device_data]}>\n//         <Column\n//           title=\"Action\"\n//           key=\"action\"\n//           render={(record) => (\n//             <Space size=\"middle\">\n//               <a onClick={() => onEditClick(record)}>Edit</a>\n//               <Popconfirm\n//                 title=\"Are you sure?\"\n//                 okText=\"Yes\"\n//                 cancelText=\"No\"\n//                 placement=\"bottom\"\n//                 onConfirm={() => tester_delete(record)}\n//               >\n//                 <a>Remove</a>\n//               </Popconfirm>\n//             </Space>\n//           )}\n//         />\n//         <Column title=\"IP Address\" dataIndex=\"id\" key=\"id\" />\n//         <Column title=\"Hostname\" dataIndex=\"name\" key=\"name\" />\n//         <Column title=\"Device Type\" dataIndex=\"type\" key=\"type\" />\n//         <Column title=\"OS Version\" dataIndex=\"os\" key=\"os\" />\n//         <Column title=\"Mac Address\" dataIndex=\"mac_addr\" key=\"mac_addr\" />\n//         <Column title=\"Ownership\" dataIndex=\"ownership\" key=\"ownership\" />\n//       </Table>\n//     </Layout>\n//   </div>\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"AppManageDevice\");","map":{"version":3,"sources":["C:/SourceTree/capstone-project/src/ManageDevices.js"],"names":["React","useState","memo","Form","Layout","Table","Space","Popconfirm","ManageDrawer","device_data","Column","AppManageDevice","manageDrawerStatus","setManageDrawerStatus","manageDeviceDetails","setManageDeviceDetails","deviceTableData","updateDeviceTableData","deviceForm","useForm","onEditClick","record","openManageDrawerStatus","setFormValues","closeMangeDeviceDrawer","setFieldsValue","hostname","name","device_type","type","os_version","os","mac_address","mac_addr","ownership","updatedFormValues","updated","console","log","id","updateTableValues","i","length","tester_delete","recordToDelete","splice","tableComponent","props","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, memo } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Layout, Table, Space, Popconfirm } from \"antd\";\nimport ManageDrawer from \"./Components/DrawerManage\";\nimport device_data from \"./Components/Data/device_data.json\";\n\nconst { Column } = Table;\n\nfunction AppManageDevice() {\n  const [manageDrawerStatus, setManageDrawerStatus] = useState(false);\n  const [manageDeviceDetails, setManageDeviceDetails] = useState({});\n  const [deviceTableData, updateDeviceTableData] = useState(device_data);\n\n  const [deviceForm] = Form.useForm();\n\n  // When user clicks on \"Edit\", two functions will run:\n  // - openManageDrawerStatus - To open device drawer\n  // - setManageDeviceDetails - Pass the record to FormDeviceMange page (for the Revert button)\n  // - setFormValue - Directly update the values in the Form component\n  async function onEditClick(record) {\n    openManageDrawerStatus();\n    setManageDeviceDetails(record);\n    setFormValues(record);\n  }\n\n  const openManageDrawerStatus = () => {\n    setManageDrawerStatus(true);\n  };\n\n  const closeMangeDeviceDrawer = () => {\n    setManageDrawerStatus(false);\n  };\n\n  const setFormValues = (record) => {\n    deviceForm.setFieldsValue({\n      hostname: record.name,\n      device_type: record.type,\n      os_version: record.os,\n      mac_address: record.mac_addr,\n      ownership: record.ownership,\n    });\n  };\n\n  // To update the values in the table based on the new\n  const updatedFormValues = (updated) => {\n    // Sample console log for verification only\n    console.log(\n      \"Updated hostname to\",\n      updated.hostname,\n      \"where IP Address is\",\n      manageDeviceDetails.id\n    );\n\n    updateTableValues(updated);\n  };\n\n  // Function to update the table with the updated values from the user\n  function updateTableValues(updated) {\n    for (var i = 0; i < device_data.length; i++) {\n      if (device_data[i].id == manageDeviceDetails.id) {\n        device_data[i].name = updated.hostname;\n        break;\n      }\n    }\n    console.log(\"Table Updated:\", device_data[i].name);\n  }\n\n  function tester_delete(recordToDelete) {\n    console.log(recordToDelete.id);\n    for (var i = 0; i < device_data.length; i++) {\n      if (device_data[i].id == recordToDelete.id) {\n        device_data.splice(i, 1);\n        console.log(device_data);\n      }\n    }\n  }\n\n  const tableComponent = React.memo((props) => {\n    return (\n      <div>\n        <ManageDrawer\n          manageDrawerStatus={manageDrawerStatus}\n          manageDeviceDetails={manageDeviceDetails}\n          closeMangeDeviceDrawer={closeMangeDeviceDrawer}\n          deviceForm={deviceForm}\n          updatedFormValues={updatedFormValues}\n        />\n        <Layout style={{ marginLeft: 198 }}>\n          <Table dataSource={[...device_data]}>\n            <Column\n              title=\"Action\"\n              key=\"action\"\n              render={(record) => (\n                <Space size=\"middle\">\n                  <a onClick={() => onEditClick(record)}>Edit</a>\n                  <Popconfirm\n                    title=\"Are you sure?\"\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    placement=\"bottom\"\n                    onConfirm={() => tester_delete(record)}\n                  >\n                    <a>Remove</a>\n                  </Popconfirm>\n                </Space>\n              )}\n            />\n            <Column title=\"IP Address\" dataIndex=\"id\" key=\"id\" />\n            <Column title=\"Hostname\" dataIndex=\"name\" key=\"name\" />\n            <Column title=\"Device Type\" dataIndex=\"type\" key=\"type\" />\n            <Column title=\"OS Version\" dataIndex=\"os\" key=\"os\" />\n            <Column title=\"Mac Address\" dataIndex=\"mac_addr\" key=\"mac_addr\" />\n            <Column title=\"Ownership\" dataIndex=\"ownership\" key=\"ownership\" />\n          </Table>\n        </Layout>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <tableComponent />\n    </div>\n  );\n}\n\nexport default AppManageDevice;\n\n// return (\n//   <div>\n//     <ManageDrawer\n//       manageDrawerStatus={manageDrawerStatus}\n//       manageDeviceDetails={manageDeviceDetails}\n//       closeMangeDeviceDrawer={closeMangeDeviceDrawer}\n//       deviceForm={deviceForm}\n//       updatedFormValues={updatedFormValues}\n//     />\n//     <Layout style={{ marginLeft: 199 }}>\n//       <Table dataSource={[...device_data]}>\n//         <Column\n//           title=\"Action\"\n//           key=\"action\"\n//           render={(record) => (\n//             <Space size=\"middle\">\n//               <a onClick={() => onEditClick(record)}>Edit</a>\n//               <Popconfirm\n//                 title=\"Are you sure?\"\n//                 okText=\"Yes\"\n//                 cancelText=\"No\"\n//                 placement=\"bottom\"\n//                 onConfirm={() => tester_delete(record)}\n//               >\n//                 <a>Remove</a>\n//               </Popconfirm>\n//             </Space>\n//           )}\n//         />\n//         <Column title=\"IP Address\" dataIndex=\"id\" key=\"id\" />\n//         <Column title=\"Hostname\" dataIndex=\"name\" key=\"name\" />\n//         <Column title=\"Device Type\" dataIndex=\"type\" key=\"type\" />\n//         <Column title=\"OS Version\" dataIndex=\"os\" key=\"os\" />\n//         <Column title=\"Mac Address\" dataIndex=\"mac_addr\" key=\"mac_addr\" />\n//         <Column title=\"Ownership\" dataIndex=\"ownership\" key=\"ownership\" />\n//       </Table>\n//     </Layout>\n//   </div>\n// );\n"]},"metadata":{},"sourceType":"module"}