{"ast":null,"code":"import _slicedToArray from\"C:/SourceTree/capstone-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Card,Table}from\"antd\";// import alerts from \"./Data/alert.json\";\n// var counter = alerts.reduce(function (prev, cur) {\n//   if (prev.hasOwnProperty(cur.type)) prev[cur.type] += 1;\n//   else prev[cur.type] = 1;\n//   return prev;\n// }, {});\n// alert(JSON.stringify(groupByThreatCategory));\n// for (const [key, value] of Object.entries(groupByThreatCategory)) {\n//   console.log(`${key}: ${value}`);\n// }\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EmergingThreatsCard(_ref){var alertData=_ref.alertData;// Group the alerts by their Threat Category (store in threat_counter)\nvar groupByThreatCategory=function groupByThreatCategory(){var threat_counter={};for(var i=0;i<alertData.length;i++){if(!threat_counter[alertData[i][\"threat_category\"]]){threat_counter[alertData[i][\"threat_category\"]]=0;}threat_counter[alertData[i][\"threat_category\"]]++;}return threat_counter;};var columns=[{title:\"Threat Category\",dataIndex:\"threat_category\",key:\"threat_category\",sorter:function sorter(a,b){return a.threat_category.localeCompare(b.threat_category);}},{title:\"Frequency\",dataIndex:\"frequency\",key:\"frequency\",sorter:function sorter(a,b){return a.frequency-b.frequency;}}];// Sort the groups (of Threat Category) by highest to lowest frequency (no. of occurances)\nvar sortByFrequency=Object.entries(groupByThreatCategory()).sort(function(_ref2,_ref3){var _ref4=_slicedToArray(_ref2,2),b=_ref4[1];var _ref5=_slicedToArray(_ref3,2),a=_ref5[1];return a-b;})// Sort from highest to lowest\n.splice(0,4);// Select the top four (frequency)\n// Add the key values using the result ofsortByFrequency for the dataSource in the table\nvar dataToTable=function dataToTable(data){var result=[];for(var k in data){result.push({threat_category:data[k][0],frequency:data[k][1]});}return result;};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Card,{headStyle:{color:\"white\",background:\"#3E3D40\"},title:\"Emerging Threats\",style:{width:\"100%\",overflow:\"hidden\",color:\"white\",margin:\"0 auto\"},bodyStyle:{background:\"#1F1E26\"},children:[/*#__PURE__*/_jsx(Table,{dataSource:dataToTable(sortByFrequency),rowKey:\"123\",columns:columns,size:\"small\",pagination:false}),/*#__PURE__*/_jsx(\"ul\",{id:\"abcd\"})]})});}export default EmergingThreatsCard;// <div>\n//   {alerts.map((threats, key) => {\n//     return <p key={key}>{threats.threat_category}</p>;\n//   })}\n// </div>;\n// const groupByThreatCategory1 = alerts.reduce((alertData, alertCounter) => {\n//   alertData[alertCounter.threat_category] =\n//     alertData[alertCounter.threat_category] + 1 || 1;\n//   return alertData;\n// }, {});\n// {\n//   Object.entries(sortByFrequency).map((entry) => {\n//     return (\n//       <p>\n//         <span key={entry[0]}>{`${entry[1][0]}`}</span>{\" \"}\n//         <span\n//           style={{ position: \"absolute\", right: 30 }}\n//         >{`${entry[1][1]}`}</span>\n//         <br />\n//       </p>\n//     );\n//   });\n// }\n// {\n//   Object.entries(sortByFrequency).map((entry) => {\n//     return (\n//       <p>\n//         <span>{`${entry[1][0]}`}</span>{\" \"}\n//         <span\n//           style={{ position: \"absolute\", right: 30 }}\n//         >{`${entry[1][1]}`}</span>\n//         <br />\n//       </p>\n//     );\n//   });\n// }","map":{"version":3,"sources":["C:/SourceTree/capstone-project/src/Components/CardEmergingThreats.js"],"names":["Card","Table","EmergingThreatsCard","alertData","groupByThreatCategory","threat_counter","i","length","columns","title","dataIndex","key","sorter","a","b","threat_category","localeCompare","frequency","sortByFrequency","Object","entries","sort","splice","dataToTable","data","result","k","push","color","background","width","overflow","margin"],"mappings":"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","sourcesContent":["import { Card, Table } from \"antd\";\r\n// import alerts from \"./Data/alert.json\";\r\n\r\n// var counter = alerts.reduce(function (prev, cur) {\r\n//   if (prev.hasOwnProperty(cur.type)) prev[cur.type] += 1;\r\n//   else prev[cur.type] = 1;\r\n\r\n//   return prev;\r\n// }, {});\r\n\r\n// alert(JSON.stringify(groupByThreatCategory));\r\n\r\n// for (const [key, value] of Object.entries(groupByThreatCategory)) {\r\n//   console.log(`${key}: ${value}`);\r\n// }\r\n\r\nfunction EmergingThreatsCard({ alertData }) {\r\n  // Group the alerts by their Threat Category (store in threat_counter)\r\n  const groupByThreatCategory = () => {\r\n    var threat_counter = {};\r\n    for (var i = 0; i < alertData.length; i++) {\r\n      if (!threat_counter[alertData[i][\"threat_category\"]]) {\r\n        threat_counter[alertData[i][\"threat_category\"]] = 0;\r\n      }\r\n      threat_counter[alertData[i][\"threat_category\"]]++;\r\n    }\r\n    return threat_counter;\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Threat Category\",\r\n      dataIndex: \"threat_category\",\r\n      key: \"threat_category\",\r\n      sorter: (a, b) => a.threat_category.localeCompare(b.threat_category),\r\n    },\r\n    {\r\n      title: \"Frequency\",\r\n      dataIndex: \"frequency\",\r\n      key: \"frequency\",\r\n      sorter: (a, b) => a.frequency - b.frequency,\r\n    },\r\n  ];\r\n\r\n  // Sort the groups (of Threat Category) by highest to lowest frequency (no. of occurances)\r\n  const sortByFrequency = Object.entries(groupByThreatCategory())\r\n    .sort(([, b], [, a]) => a - b) // Sort from highest to lowest\r\n    .splice(0, 4); // Select the top four (frequency)\r\n\r\n  // Add the key values using the result ofsortByFrequency for the dataSource in the table\r\n  const dataToTable = (data) => {\r\n    var result = [];\r\n    for (var k in data)\r\n      result.push({ threat_category: data[k][0], frequency: data[k][1] });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        headStyle={{\r\n          color: \"white\",\r\n          background: \"#3E3D40\",\r\n        }}\r\n        title=\"Emerging Threats\"\r\n        style={{\r\n          width: \"100%\",\r\n          overflow: \"hidden\",\r\n          color: \"white\",\r\n          margin: \"0 auto\",\r\n        }}\r\n        bodyStyle={{ background: \"#1F1E26\" }}\r\n      >\r\n        <Table\r\n          dataSource={dataToTable(sortByFrequency)}\r\n          rowKey={\"123\"}\r\n          columns={columns}\r\n          size=\"small\"\r\n          pagination={false}\r\n        />\r\n        <ul id=\"abcd\"></ul>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmergingThreatsCard;\r\n\r\n// <div>\r\n//   {alerts.map((threats, key) => {\r\n//     return <p key={key}>{threats.threat_category}</p>;\r\n//   })}\r\n// </div>;\r\n\r\n// const groupByThreatCategory1 = alerts.reduce((alertData, alertCounter) => {\r\n//   alertData[alertCounter.threat_category] =\r\n//     alertData[alertCounter.threat_category] + 1 || 1;\r\n//   return alertData;\r\n// }, {});\r\n\r\n// {\r\n//   Object.entries(sortByFrequency).map((entry) => {\r\n//     return (\r\n//       <p>\r\n//         <span key={entry[0]}>{`${entry[1][0]}`}</span>{\" \"}\r\n//         <span\r\n//           style={{ position: \"absolute\", right: 30 }}\r\n//         >{`${entry[1][1]}`}</span>\r\n//         <br />\r\n//       </p>\r\n//     );\r\n//   });\r\n// }\r\n\r\n// {\r\n//   Object.entries(sortByFrequency).map((entry) => {\r\n//     return (\r\n//       <p>\r\n//         <span>{`${entry[1][0]}`}</span>{\" \"}\r\n//         <span\r\n//           style={{ position: \"absolute\", right: 30 }}\r\n//         >{`${entry[1][1]}`}</span>\r\n//         <br />\r\n//       </p>\r\n//     );\r\n//   });\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}