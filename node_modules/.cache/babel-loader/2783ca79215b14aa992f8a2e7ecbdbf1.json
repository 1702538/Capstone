{"ast":null,"code":"var _jsxFileName = \"C:\\\\Capstone\\\\capstone-project\\\\src\\\\NetworkTopology.js\";\nimport \"antd/dist/antd.css\";\nimport { ForceGraph3D } from \"react-force-graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppNetworkTopology() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ForceGraph3D, {\n      graphData: genRandomTree()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this) // <ForceGraph3D\n  //     graphData={{\n  //       nodes: [\n  //         {\n  //           id: \"id1\",\n  //           name: \"name1\",\n  //           val: 1,\n  //         },\n  //         {\n  //           id: \"id2\",\n  //           name: \"name2\",\n  //           val: 10,\n  //         },\n  //       ],\n  //       links: [\n  //         {\n  //           source: \"id1\",\n  //           target: \"id2\",\n  //         },\n  //       ],\n  //     }}\n  //   />\n  // </div>\n  ;\n}\n\n_c = AppNetworkTopology;\n\nfunction genRandomTree() {\n  let N = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 300;\n  let reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    nodes: [...Array(N).keys()].map(i => ({\n      id: i\n    })),\n    links: [...Array(N).keys()].filter(id => id).map(id => ({\n      [reverse ? \"target\" : \"source\"]: id,\n      [reverse ? \"source\" : \"target\"]: Math.round(Math.random() * (id - 1))\n    }))\n  };\n}\n\nexport default AppNetworkTopology;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppNetworkTopology\");","map":{"version":3,"sources":["C:/Capstone/capstone-project/src/NetworkTopology.js"],"names":["ForceGraph3D","AppNetworkTopology","genRandomTree","N","reverse","nodes","Array","keys","map","i","id","links","filter","Math","round","random"],"mappings":";AAAA,OAAO,oBAAP;AACA,SAASA,YAAT,QAA6B,mBAA7B;;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,sBACE;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAEC,aAAa;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BF;AA4BD;;KA7BQD,kB;;AA+BT,SAASC,aAAT,GAAiD;AAAA,MAA1BC,CAA0B,uEAAtB,GAAsB;AAAA,MAAjBC,OAAiB,uEAAP,KAAO;AAC/C,SAAO;AACLC,IAAAA,KAAK,EAAE,CAAC,GAAGC,KAAK,CAACH,CAAD,CAAL,CAASI,IAAT,EAAJ,EAAqBC,GAArB,CAA0BC,CAAD,KAAQ;AAAEC,MAAAA,EAAE,EAAED;AAAN,KAAR,CAAzB,CADF;AAELE,IAAAA,KAAK,EAAE,CAAC,GAAGL,KAAK,CAACH,CAAD,CAAL,CAASI,IAAT,EAAJ,EACJK,MADI,CACIF,EAAD,IAAQA,EADX,EAEJF,GAFI,CAECE,EAAD,KAAS;AACZ,OAACN,OAAO,GAAG,QAAH,GAAc,QAAtB,GAAiCM,EADrB;AAEZ,OAACN,OAAO,GAAG,QAAH,GAAc,QAAtB,GAAiCS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,EAAE,GAAG,CAAtB,CAAX;AAFrB,KAAT,CAFA;AAFF,GAAP;AASD;;AAED,eAAeT,kBAAf","sourcesContent":["import \"antd/dist/antd.css\";\nimport { ForceGraph3D } from \"react-force-graph\";\n\nfunction AppNetworkTopology() {\n  return (\n    <div>\n      <ForceGraph3D graphData={genRandomTree()} />\n    </div>\n    // <ForceGraph3D\n    //     graphData={{\n    //       nodes: [\n    //         {\n    //           id: \"id1\",\n    //           name: \"name1\",\n    //           val: 1,\n    //         },\n    //         {\n    //           id: \"id2\",\n    //           name: \"name2\",\n    //           val: 10,\n    //         },\n    //       ],\n    //       links: [\n    //         {\n    //           source: \"id1\",\n    //           target: \"id2\",\n    //         },\n    //       ],\n    //     }}\n    //   />\n    // </div>\n  );\n}\n\nfunction genRandomTree(N = 300, reverse = false) {\n  return {\n    nodes: [...Array(N).keys()].map((i) => ({ id: i })),\n    links: [...Array(N).keys()]\n      .filter((id) => id)\n      .map((id) => ({\n        [reverse ? \"target\" : \"source\"]: id,\n        [reverse ? \"source\" : \"target\"]: Math.round(Math.random() * (id - 1)),\n      })),\n  };\n}\n\nexport default AppNetworkTopology;\n"]},"metadata":{},"sourceType":"module"}