{"ast":null,"code":"var _jsxFileName = \"C:\\\\SourceTree\\\\capstone-project\\\\src\\\\Components\\\\DrawerDevice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Drawer, Button, Col, Row } from \"antd\";\nimport DeviceCard from \"./Card_Device\";\nimport EmergingThreatsCard from \"./CardEmergingThreats\";\nimport StatisticsBoxes from \"./Statistics\";\nimport ThreatsTable from \"./TableThreats\"; // Function to render the Drawer component to display the device information\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeviceDrawer(_ref) {\n  _s();\n\n  let {\n    deviceDetails,\n    drawerStatus\n  } = _ref;\n  state = {\n    deviceDetailsObject: {},\n    drawerStatusTest: drawerStatus\n  }; // By default, useState is false as no network nodes has been selected on first load\n\n  const [visible, setVisible] = useState(false); // Check if drawerStatus has been updated\n  // When user clicks on a node, drawerStatus will be passed to this component as \"true\"\n  // When drawerStatus is \"true\", run setVisible(true) to open the drawer component\n\n  useEffect(() => {\n    if (drawerStatusTest == true) {\n      setVisible(true);\n      console.log(\"Here1\");\n    } else if (drawerStatusTest == false) {\n      setVisible(false);\n      console.log(\"Here2\");\n    }\n  });\n  console.log(\"Value passed:\", drawerStatus);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Home / \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Device Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this),\n      style: {\n        color: \"white\"\n      },\n      maskStyle: {\n        color: \"white\"\n      },\n      headerStyle: {\n        // backgroundColor: \"#16151B\",\n        backgroundColor: \"white\",\n        borderBottomWidth: 0\n      },\n      bodyStyle: {\n        backgroundColor: \"#16151B\",\n        color: \"white\"\n      },\n      width: \"650px\",\n      placement: \"right\",\n      closable: true,\n      mask: false,\n      keyboard: true,\n      visible: visible,\n      onClose: () => {\n        drawerStatusTest = false;\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 25,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(DeviceCard, {\n              deviceDetails: deviceDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(EmergingThreatsCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsBoxes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThreatsTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeviceDrawer, \"cz/DzCD06IMMsoBJ0A1IgCy1P5M=\");\n\n_c = DeviceDrawer;\nexport default DeviceDrawer; // <h4>Test Drawer</h4>\n//       <Button\n//         type=\"primary\"\n//         onClick={() => {\n//           setVisible(true);\n//         }}\n//       >\n//         Open Drawer\n//       </Button>\n//       <br />\n//       <br />\n//       <Button\n//         type=\"primary\"\n//         onClick={() => {\n//           setVisible(false);\n//         }}\n//       >\n//         Close Drawer\n//       </Button>\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceDrawer\");","map":{"version":3,"sources":["C:/SourceTree/capstone-project/src/Components/DrawerDevice.js"],"names":["React","useEffect","useState","Drawer","Button","Col","Row","DeviceCard","EmergingThreatsCard","StatisticsBoxes","ThreatsTable","DeviceDrawer","deviceDetails","drawerStatus","state","deviceDetailsObject","drawerStatusTest","visible","setVisible","console","log","color","backgroundColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Drawer, Button, Col, Row } from \"antd\";\nimport DeviceCard from \"./Card_Device\";\nimport EmergingThreatsCard from \"./CardEmergingThreats\";\nimport StatisticsBoxes from \"./Statistics\";\nimport ThreatsTable from \"./TableThreats\";\n\n// Function to render the Drawer component to display the device information\nfunction DeviceDrawer({ deviceDetails, drawerStatus }) {\n  state = {\n    deviceDetailsObject: {},\n    drawerStatusTest: drawerStatus,\n  };\n\n  // By default, useState is false as no network nodes has been selected on first load\n  const [visible, setVisible] = useState(false);\n  // Check if drawerStatus has been updated\n  // When user clicks on a node, drawerStatus will be passed to this component as \"true\"\n  // When drawerStatus is \"true\", run setVisible(true) to open the drawer component\n  useEffect(() => {\n    if (drawerStatusTest == true) {\n      setVisible(true);\n      console.log(\"Here1\");\n    } else if (drawerStatusTest == false) {\n      setVisible(false);\n      console.log(\"Here2\");\n    }\n  });\n  console.log(\"Value passed:\", drawerStatus);\n  return (\n    <div>\n      <Drawer\n        title={\n          <div>\n            Home / <b>Device Statistics</b>\n          </div>\n        }\n        style={{ color: \"white\" }}\n        maskStyle={{\n          color: \"white\",\n        }}\n        headerStyle={{\n          // backgroundColor: \"#16151B\",\n          backgroundColor: \"white\",\n          borderBottomWidth: 0,\n        }}\n        bodyStyle={{\n          backgroundColor: \"#16151B\",\n          color: \"white\",\n        }}\n        width={\"650px\"}\n        placement=\"right\"\n        closable={true}\n        mask={false}\n        keyboard={true}\n        visible={visible}\n        onClose={() => {\n          drawerStatusTest = false;\n        }}\n      >\n        <div>\n          <Row gutter={25}>\n            <Col span={12}>\n              <DeviceCard deviceDetails={deviceDetails} />\n            </Col>\n            <Col span={12}>\n              <EmergingThreatsCard />\n            </Col>\n          </Row>\n        </div>\n        <br />\n        <StatisticsBoxes />\n        <br />\n        <ThreatsTable />\n      </Drawer>\n    </div>\n  );\n}\n\nexport default DeviceDrawer;\n\n// <h4>Test Drawer</h4>\n//       <Button\n//         type=\"primary\"\n//         onClick={() => {\n//           setVisible(true);\n//         }}\n//       >\n//         Open Drawer\n//       </Button>\n//       <br />\n//       <br />\n//       <Button\n//         type=\"primary\"\n//         onClick={() => {\n//           setVisible(false);\n//         }}\n//       >\n//         Close Drawer\n//       </Button>\n"]},"metadata":{},"sourceType":"module"}