{"ast":null,"code":"var _jsxFileName = \"C:\\\\SourceTree\\\\capstone-project\\\\src\\\\Components\\\\DrawerDevice.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Drawer, Button, Col, Row } from \"antd\";\nimport DeviceCard from \"./Card_Device\";\nimport EmergingThreatsCard from \"./CardEmergingThreats\";\nimport StatsDevice from \"./StatisticsDevice\";\nimport ThreatsTable from \"./TableThreats\";\nimport device_data from \"./Data/device_data.json\"; // Function to render the Drawer component to display the device information\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groupByAge = device_data.reduce((acc, it) => {\n  acc[it.type] = acc[it.type] + 1 || 1;\n  return acc;\n}, {});\n\nfunction DeviceDrawer(_ref) {\n  let {\n    deviceDetails,\n    deviceDrawerStatus,\n    closeDeviceDrawerFunction\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(groupByAge[\"type\" === \"DB\"])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Home / \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Device Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this),\n      style: {\n        color: \"white\"\n      },\n      maskStyle: {\n        color: \"white\"\n      },\n      headerStyle: {\n        backgroundColor: \"white\",\n        borderBottomWidth: 0\n      },\n      bodyStyle: {\n        backgroundColor: \"#16151B\",\n        color: \"white\"\n      },\n      width: \"650px\",\n      placement: \"right\",\n      closable: true,\n      mask: false,\n      keyboard: true,\n      visible: deviceDrawerStatus,\n      onClose: closeDeviceDrawerFunction,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 25,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(DeviceCard, {\n              deviceDetails: deviceDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(EmergingThreatsCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsDevice, {\n        deviceDetails: deviceDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThreatsTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DeviceDrawer;\nexport default DeviceDrawer; // <h4>Test Drawer</h4>\n//       <Button\n//         type=\"primary\"\n//         onClick={() => {\n//           setVisible(true);\n//         }}\n//       >\n//         Open Drawer\n//       </Button>\n//       <br />\n//       <br />\n//       <Button\n//         type=\"primary\"\n//         onClick={() => {\n//           setVisible(false);\n//         }}\n//       >\n//         Close Drawer\n//       </Button>\n// By default, useState is false as no network nodes has been selected on first load\n// const [visible, setVisible] = useState(false);\n// Check if drawerStatus has been updated\n// When user clicks on a node, drawerStatus will be passed to this component as \"true\"\n// When drawerStatus is \"true\", run setVisible(true) to open the drawer component\n// console.log(deviceDetails);\n// useEffect(() => {\n//   if (drawerStatus == true) {\n//     setVisible(true);\n//     console.log(\"Here1\");\n//   } else if (drawerStatus == false) {\n//     setVisible(false);\n//     console.log(\"Here2\");\n//   }\n// });\n// console.log(\"Value passed:\", drawerStatus);\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceDrawer\");","map":{"version":3,"sources":["C:/SourceTree/capstone-project/src/Components/DrawerDevice.js"],"names":["React","useEffect","useState","Drawer","Button","Col","Row","DeviceCard","EmergingThreatsCard","StatsDevice","ThreatsTable","device_data","groupByAge","reduce","acc","it","type","DeviceDrawer","deviceDetails","deviceDrawerStatus","closeDeviceDrawerFunction","JSON","stringify","color","backgroundColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Drawer, Button, Col, Row } from \"antd\";\nimport DeviceCard from \"./Card_Device\";\nimport EmergingThreatsCard from \"./CardEmergingThreats\";\nimport StatsDevice from \"./StatisticsDevice\";\nimport ThreatsTable from \"./TableThreats\";\nimport device_data from \"./Data/device_data.json\";\n\n// Function to render the Drawer component to display the device information\n\nconst groupByAge = device_data.reduce((acc, it) => {\n  acc[it.type] = acc[it.type] + 1 || 1;\n  return acc;\n}, {});\n\nfunction DeviceDrawer({\n  deviceDetails,\n  deviceDrawerStatus,\n  closeDeviceDrawerFunction,\n}) {\n  return (\n    <div>\n      <p>{JSON.stringify(groupByAge[\"type\" === \"DB\"])}</p>\n      <Drawer\n        title={\n          <div>\n            Home / <b>Device Statistics</b>\n          </div>\n        }\n        style={{ color: \"white\" }}\n        maskStyle={{\n          color: \"white\",\n        }}\n        headerStyle={{\n          backgroundColor: \"white\",\n          borderBottomWidth: 0,\n        }}\n        bodyStyle={{\n          backgroundColor: \"#16151B\",\n          color: \"white\",\n        }}\n        width={\"650px\"}\n        placement=\"right\"\n        closable={true}\n        mask={false}\n        keyboard={true}\n        visible={deviceDrawerStatus}\n        onClose={closeDeviceDrawerFunction}\n      >\n        <div>\n          <Row gutter={25}>\n            <Col span={12}>\n              <DeviceCard deviceDetails={deviceDetails} />\n            </Col>\n            <Col span={12}>\n              <EmergingThreatsCard />\n            </Col>\n          </Row>\n        </div>\n        <br />\n        <StatsDevice deviceDetails={deviceDetails} />\n        <br />\n        <ThreatsTable />\n      </Drawer>\n    </div>\n  );\n}\n\nexport default DeviceDrawer;\n\n// <h4>Test Drawer</h4>\n//       <Button\n//         type=\"primary\"\n//         onClick={() => {\n//           setVisible(true);\n//         }}\n//       >\n//         Open Drawer\n//       </Button>\n//       <br />\n//       <br />\n//       <Button\n//         type=\"primary\"\n//         onClick={() => {\n//           setVisible(false);\n//         }}\n//       >\n//         Close Drawer\n//       </Button>\n\n// By default, useState is false as no network nodes has been selected on first load\n// const [visible, setVisible] = useState(false);\n// Check if drawerStatus has been updated\n// When user clicks on a node, drawerStatus will be passed to this component as \"true\"\n// When drawerStatus is \"true\", run setVisible(true) to open the drawer component\n// console.log(deviceDetails);\n// useEffect(() => {\n//   if (drawerStatus == true) {\n//     setVisible(true);\n//     console.log(\"Here1\");\n//   } else if (drawerStatus == false) {\n//     setVisible(false);\n//     console.log(\"Here2\");\n//   }\n// });\n// console.log(\"Value passed:\", drawerStatus);\n"]},"metadata":{},"sourceType":"module"}