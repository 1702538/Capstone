{"ast":null,"code":"var _jsxFileName = \"C:\\\\SourceTree\\\\capstone-project\\\\src\\\\Components\\\\TableThreats.js\";\nimport { Table } from \"antd\";\nimport moment from \"moment\";\nimport React, { memo } from \"react\"; // import alerts from \"./Data/alert.json\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThreatsTable(_ref) {\n  let {\n    alertData,\n    deviceDetails\n  } = _ref;\n  var date;\n  const testTimer = /*#__PURE__*/React.memo(() => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: moment().format()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  });\n  const month_array = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  console.log(moment().format());\n\n  if (deviceDetails !== undefined) {\n    alertData = alertData.filter(record => record.destination.includes(deviceDetails.id));\n  }\n\n  Object.keys(alertData).forEach(key => {\n    date = new Date(alertData[key][\"timestamp\"]);\n    alertData[key][\"timestamp\"] = date.getDate() + \" \" + month_array[date.getMonth()] + \" \" + date.getFullYear() + \" \" + (date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours()) + \":\" + (date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()) + \":\" + (date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Detected Cyber Security Threats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"testTimer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: alertData,\n      columns: columns,\n      pagination: {\n        defaultPageSize: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ThreatsTable;\nconst dataSource = [];\nconst columns = [{\n  title: \"Timestamp\",\n  dataIndex: \"timestamp\",\n  key: \"timestamp\",\n  sorter: (a, b) => a.timestamp - b.timestamp\n}, {\n  title: \"Source\",\n  dataIndex: \"source\",\n  key: \"source\"\n}, {\n  title: \"Destination\",\n  dataIndex: \"destination\",\n  key: \"destination\"\n}, {\n  title: \"Threat Info\",\n  dataIndex: \"threatinfo\",\n  render: (text, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Threat Category: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), record.threat_category, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Threat Name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), record.threat_name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this),\n  key: \"threat\",\n  filters: [{\n    text: \"Policy Violation\",\n    value: \"Policy Violation\"\n  }, {\n    text: \"Suspicious\",\n    value: \"Suspicious\"\n  }],\n  onFilter: (value, record) => record.threat_category.includes(value),\n  filterMode: \"tree\",\n  filterSearch: true\n} // {\n//   title: \"Threat Type\",\n//   dataIndex: \"threat\",\n//   key: \"threat\",\n//   filters: [\n//     {\n//       text: \"Trojan\",\n//       value: \"Trojan\",\n//     },\n//     {\n//       text: \"Rootkit\",\n//       value: \"Rootkit\",\n//     },\n//   ],\n//   onFilter: (value, record) => record.threat.includes(value),\n//   filterMode: \"tree\",\n//   filterSearch: true,\n// },\n];\nexport default ThreatsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreatsTable\");","map":{"version":3,"sources":["C:/SourceTree/capstone-project/src/Components/TableThreats.js"],"names":["Table","moment","React","memo","ThreatsTable","alertData","deviceDetails","date","testTimer","format","month_array","console","log","undefined","filter","record","destination","includes","id","Object","keys","forEach","key","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","color","columns","defaultPageSize","dataSource","title","dataIndex","sorter","a","b","timestamp","render","text","threat_category","threat_name","filters","value","onFilter","filterMode","filterSearch"],"mappings":"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","sourcesContent":["import { Table } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { memo } from \"react\";\r\n// import alerts from \"./Data/alert.json\";\r\n\r\nfunction ThreatsTable({ alertData, deviceDetails }) {\r\n  var date;\r\n\r\n  const testTimer = React.memo(() => {\r\n    return <p>{moment().format()}</p>;\r\n  });\r\n\r\n  const month_array = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  console.log(moment().format());\r\n\r\n  if (deviceDetails !== undefined) {\r\n    alertData = alertData.filter((record) =>\r\n      record.destination.includes(deviceDetails.id)\r\n    );\r\n  }\r\n\r\n  Object.keys(alertData).forEach((key) => {\r\n    date = new Date(alertData[key][\"timestamp\"]);\r\n    alertData[key][\"timestamp\"] =\r\n      date.getDate() +\r\n      \" \" +\r\n      month_array[date.getMonth()] +\r\n      \" \" +\r\n      date.getFullYear() +\r\n      \" \" +\r\n      (date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours()) +\r\n      \":\" +\r\n      (date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()) +\r\n      \":\" +\r\n      (date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds());\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ color: \"white\" }}>Detected Cyber Security Threats</h3>\r\n      <testTimer />\r\n      <Table\r\n        dataSource={alertData}\r\n        columns={columns}\r\n        pagination={{\r\n          defaultPageSize: 10,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst dataSource = [];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Timestamp\",\r\n    dataIndex: \"timestamp\",\r\n    key: \"timestamp\",\r\n    sorter: (a, b) => a.timestamp - b.timestamp,\r\n  },\r\n  {\r\n    title: \"Source\",\r\n    dataIndex: \"source\",\r\n    key: \"source\",\r\n  },\r\n  {\r\n    title: \"Destination\",\r\n    dataIndex: \"destination\",\r\n    key: \"destination\",\r\n  },\r\n  {\r\n    title: \"Threat Info\",\r\n    dataIndex: \"threatinfo\",\r\n    render: (text, record) => (\r\n      <span>\r\n        <b>Threat Category: </b>\r\n        {record.threat_category} <br />\r\n        <b>Threat Name: </b>\r\n        {record.threat_name} <br />\r\n      </span>\r\n    ),\r\n    key: \"threat\",\r\n    filters: [\r\n      {\r\n        text: \"Policy Violation\",\r\n        value: \"Policy Violation\",\r\n      },\r\n      {\r\n        text: \"Suspicious\",\r\n        value: \"Suspicious\",\r\n      },\r\n    ],\r\n    onFilter: (value, record) => record.threat_category.includes(value),\r\n    filterMode: \"tree\",\r\n    filterSearch: true,\r\n  },\r\n  // {\r\n  //   title: \"Threat Type\",\r\n  //   dataIndex: \"threat\",\r\n  //   key: \"threat\",\r\n  //   filters: [\r\n  //     {\r\n  //       text: \"Trojan\",\r\n  //       value: \"Trojan\",\r\n  //     },\r\n  //     {\r\n  //       text: \"Rootkit\",\r\n  //       value: \"Rootkit\",\r\n  //     },\r\n  //   ],\r\n  //   onFilter: (value, record) => record.threat.includes(value),\r\n  //   filterMode: \"tree\",\r\n  //   filterSearch: true,\r\n  // },\r\n];\r\n\r\nexport default ThreatsTable;\r\n"]},"metadata":{},"sourceType":"module"}