{"ast":null,"code":"var _jsxFileName = \"C:\\\\SourceTree\\\\capstone-project\\\\src\\\\ManageDevices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Button, Layout, Table, Space } from \"antd\";\nimport ManageDrawer from \"./Components/DrawerManage\";\nimport device_data from \"./Components/Data/device_data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column\n} = Table;\n\nfunction AppManageDevice() {\n  _s();\n\n  const [manageDrawerStatus, setManageDrawerStatus] = useState(false);\n  const [manageDeviceDetails, setManageDeviceDetails] = useState({});\n  const [deviceForm] = Form.useForm(); // When user clicks on \"Edit\", two functions will run:\n  // - openManageDrawerStatus - To open device drawer\n  // -\n\n  const onEditClick = record => {\n    openManageDrawerStatus();\n    handleButton1();\n    passManageDeviceDetails(record);\n  };\n\n  const testCallback = useCallback(record => {\n    openManageDrawerStatus();\n    passManageDeviceDetails(record);\n    handleButton1();\n  }, [manageDeviceDetails]);\n\n  const openManageDrawerStatus = () => {\n    setManageDrawerStatus(true);\n  };\n\n  const closeMangeDeviceDrawer = () => {\n    setManageDrawerStatus(false);\n  };\n\n  const passManageDeviceDetails = record => {\n    setManageDeviceDetails(record);\n  };\n\n  const handleButton1 = () => {\n    deviceForm.setFieldsValue({\n      hostname: manageDeviceDetails.name,\n      device_type: manageDeviceDetails.type,\n      os_version: manageDeviceDetails.os,\n      mac_address: manageDeviceDetails.mac_addr,\n      ownership: manageDeviceDetails.ownership\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ManageDrawer, {\n      manageDrawerStatus: manageDrawerStatus,\n      manageDeviceDetails: manageDeviceDetails,\n      closeMangeDeviceDrawer: closeMangeDeviceDrawer,\n      deviceForm: deviceForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      style: {\n        marginLeft: 200\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: device_data,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          title: \"Action\",\n          render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n            size: \"middle\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => testCallback(record),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, \"action\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"IP Address\",\n          dataIndex: \"id\"\n        }, \"id\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Hostname\",\n          dataIndex: \"name\"\n        }, \"name\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Device Type\",\n          dataIndex: \"type\"\n        }, \"type\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"OS Version\",\n          dataIndex: \"os\"\n        }, \"os\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Mac Address\",\n          dataIndex: \"mac_addr\"\n        }, \"mac_addr\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Ownership\",\n          dataIndex: \"ownership\"\n        }, \"ownership\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppManageDevice, \"870rEJ/RFivB03B6qKs+9p7a8o0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = AppManageDevice;\nexport default AppManageDevice;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppManageDevice\");","map":{"version":3,"sources":["C:/SourceTree/capstone-project/src/ManageDevices.js"],"names":["React","useState","useCallback","Form","Button","Layout","Table","Space","ManageDrawer","device_data","Column","AppManageDevice","manageDrawerStatus","setManageDrawerStatus","manageDeviceDetails","setManageDeviceDetails","deviceForm","useForm","onEditClick","record","openManageDrawerStatus","handleButton1","passManageDeviceDetails","testCallback","closeMangeDeviceDrawer","setFieldsValue","hostname","name","device_type","type","os_version","os","mac_address","mac_addr","ownership","marginLeft","text"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Button, Layout, Table, Space } from \"antd\";\nimport ManageDrawer from \"./Components/DrawerManage\";\nimport device_data from \"./Components/Data/device_data.json\";\n\nconst { Column } = Table;\n\nfunction AppManageDevice() {\n  const [manageDrawerStatus, setManageDrawerStatus] = useState(false);\n  const [manageDeviceDetails, setManageDeviceDetails] = useState({});\n\n  const [deviceForm] = Form.useForm();\n\n  // When user clicks on \"Edit\", two functions will run:\n  // - openManageDrawerStatus - To open device drawer\n  // -\n  const onEditClick = (record) => {\n    openManageDrawerStatus();\n    handleButton1();\n    passManageDeviceDetails(record);\n  };\n\n  const testCallback = useCallback(\n    (record) => {\n      openManageDrawerStatus();\n      passManageDeviceDetails(record);\n      handleButton1();\n    },\n    [manageDeviceDetails]\n  );\n\n  const openManageDrawerStatus = () => {\n    setManageDrawerStatus(true);\n  };\n\n  const closeMangeDeviceDrawer = () => {\n    setManageDrawerStatus(false);\n  };\n\n  const passManageDeviceDetails = (record) => {\n    setManageDeviceDetails(record);\n  };\n\n  const handleButton1 = () => {\n    deviceForm.setFieldsValue({\n      hostname: manageDeviceDetails.name,\n      device_type: manageDeviceDetails.type,\n      os_version: manageDeviceDetails.os,\n      mac_address: manageDeviceDetails.mac_addr,\n      ownership: manageDeviceDetails.ownership,\n    });\n  };\n\n  return (\n    <div>\n      <ManageDrawer\n        manageDrawerStatus={manageDrawerStatus}\n        manageDeviceDetails={manageDeviceDetails}\n        closeMangeDeviceDrawer={closeMangeDeviceDrawer}\n        deviceForm={deviceForm}\n      />\n      <Layout style={{ marginLeft: 200 }}>\n        <Table dataSource={device_data}>\n          <Column\n            title=\"Action\"\n            key=\"action\"\n            render={(text, record) => (\n              <Space size=\"middle\">\n                <a onClick={() => testCallback(record)}>Edit</a>\n                <a>Remove</a>\n              </Space>\n            )}\n          />\n          <Column title=\"IP Address\" dataIndex=\"id\" key=\"id\" />\n          <Column title=\"Hostname\" dataIndex=\"name\" key=\"name\" />\n          <Column title=\"Device Type\" dataIndex=\"type\" key=\"type\" />\n          <Column title=\"OS Version\" dataIndex=\"os\" key=\"os\" />\n          <Column title=\"Mac Address\" dataIndex=\"mac_addr\" key=\"mac_addr\" />\n          <Column title=\"Ownership\" dataIndex=\"ownership\" key=\"ownership\" />\n        </Table>\n      </Layout>\n    </div>\n  );\n}\n\nexport default AppManageDevice;\n"]},"metadata":{},"sourceType":"module"}